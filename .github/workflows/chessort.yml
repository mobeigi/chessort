name: Build, Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_test_app:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install
      working-directory: ./app
      run: yarn install
    - name: Lint
      working-directory: ./app
      run: yarn lint
    - name: Build
      working-directory: ./app
      run: yarn build

  build_test_server:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Use Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      working-directory: ./server
      run: pip install -r requirements.txt
    - name: Test
      working-directory: ./server
      run: pytest

  deploy:
    runs-on: ubuntu-latest
    needs: [build_test_app, build_test_server]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy App (via webhook)
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{
            "DOCKER_COMPOSE_PROJECT_NAME": "${{ vars.APP_DOCKER_COMPOSE_PROJECT_NAME }}",
            "GIT_REPOSITORY_NAME": "${{ vars.GIT_REPOSITORY_NAME }}"
          }'

      - name: Deploy Server (via webhook)
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{
            "DOCKER_COMPOSE_PROJECT_NAME": "${{ vars.SERVER_DOCKER_COMPOSE_PROJECT_NAME }}",
            "GIT_REPOSITORY_NAME": "${{ vars.GIT_REPOSITORY_NAME }}"
          }'
